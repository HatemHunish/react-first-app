{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","console","log","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filterMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAEaA,EAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAClB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCJbC,EAAW,SAACR,GAErB,OADAS,QAAQC,IAAIV,GACJ,qBAAKC,UAAU,YAAf,SAEJD,EAAMW,SAASC,KAAI,SAAAR,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJ3CQ,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OACrB,uBAAOC,KAAK,SAASf,UAAU,SAASa,YAAaA,EAC/CG,SAAUF,MCqCLG,E,kDApCb,aAAe,IAAD,8BACZ,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAS,GAGTU,YAAY,IANF,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,6CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACT,SAASkB,S,oBAKxC,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAiBpB,EAASqB,QAAO,SAAA5B,GAAO,OAC5CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWa,YAAY,kBACvBC,aAAce,KAAKf,eACnB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BVI,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.73f5b21a.chunk.js","sourcesContent":["import React from \"react\"\r\nimport './card.styles.css'\r\nexport const Card = (props) => \r\n  (  \r\n    <div className=\"card-container\">\r\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n</div>\r\n)\r\n","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component';\r\nexport const CardList = (props) => {\r\n    console.log(props)\r\n    return (<div className=\"card-list\">\r\n    {\r\n        props.monsters.map(monster=>(<Card key={monster.id} monster={monster}/> ))\r\n    }\r\n    </div>)\r\n};","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder,handleChange}) => (\r\n    <input type=\"search\" className=\"search\" placeholder={placeholder}\r\n          onChange={handleChange} />\r\n)","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport {SearchBox} from './components/search-box/search-box.component'\nclass App extends Component{\n\n  constructor() {\n    super();\n    this.state = {\n      monsters:[\n       \n      ],\n      searchField:''\n    }\n  }\n  componentDidMount() {\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\n      .then(res => res.json())\n    .then(users=> this.setState({monsters:users}))\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value })\n  };\n  render() {\n    const { monsters, searchField } = this.state\n    const filterMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    \n    \n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters'  \n        handleChange={this.handleChange} />\n        <CardList monsters={filterMonsters}/>\n      </div>\n    );\n\n }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}